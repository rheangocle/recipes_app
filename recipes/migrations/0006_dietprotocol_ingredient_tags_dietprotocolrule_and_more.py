# Generated by Django 5.1.4 on 2025-10-08 21:21

import django.db.models.deletion
import django.db.models.functions.text
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0005_update_userprofile_dietypes'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DietProtocol',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='ingredients', to='recipes.tag'),
        ),
        migrations.CreateModel(
            name='DietProtocolRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('phase', models.CharField(choices=[('elimination', 'Elimination'), ('reintroduction', 'Reintroduction'), ('personalization', 'Personalization')], default='elimination', max_length=20)),
                ('rule', models.CharField(choices=[('allow', 'Allow'), ('avoid', 'Avoid'), ('limit', 'Limit')], max_length=8)),
                ('threshold', models.FloatField(blank=True, help_text='Per-serving limit for LIMIT rules', null=True)),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='recipes.dietprotocol')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocol_rules', to='recipes.tag')),
            ],
            options={
                'unique_together': {('protocol', 'tag', 'phase')},
            },
        ),
        migrations.CreateModel(
            name='DietTypeRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('rule', models.CharField(choices=[('allow', 'Allow'), ('avoid', 'Avoid'), ('limit', 'Limit')], max_length=8)),
                ('diet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='recipes.diettype')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diet_type_rules', to='recipes.tag')),
            ],
            options={
                'unique_together': {('diet_type', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='IngredientAlias',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='recipes.ingredient')),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='uniq_ingredientalias_name_ci')],
            },
        ),
        migrations.CreateModel(
            name='RestrictionRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('rule', models.CharField(choices=[('allow', 'Allow'), ('avoid', 'Avoid')], max_length=8)),
                ('threshold', models.FloatField(blank=True, null=True)),
                ('ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restriction_rules', to='recipes.ingredient')),
                ('restriction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='recipes.dietaryrestriction')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restriction_rules', to='recipes.tag')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('tag__isnull', False), ('ingredient__isnull', False), _connector='OR'), name='restriction_tag_or_ingredient_required')],
            },
        ),
        migrations.CreateModel(
            name='UserProtocol',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('phase', models.CharField(choices=[('elimination', 'Elimination'), ('reintroduction', 'Reintroduction'), ('personalization', 'Personalization')], default='elimination', max_length=20)),
                ('is_primary', models.BooleanField(default=True)),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.dietprotocol')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('user',), name='one_primary_protocol_per_user'), models.UniqueConstraint(fields=('user', 'protocol'), name='unique_user_protocol')],
            },
        ),
    ]
